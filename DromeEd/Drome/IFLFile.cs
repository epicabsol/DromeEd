using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace DromeEd.Drome
{
    /// <summary>
    /// An IFL file describes an animation that is comprised of a series of texture files.
    /// </summary>
    public class IFLFile
    {
        /// <summary>
        /// One IFL frame, with a texture filename and a duration.
        /// </summary>
        public class IFLFrame
        {
            /// <summary>
            /// The filename of the texture, relative to the location of the containing IFL file.
            /// </summary>
            public string TextureFilename = "";
            
            /// <summary>
            /// The number of physics ticks (1/30 of a second) that this texture lasts for.
            /// </summary>
            public int DurationTicks = 1;

            /// <summary>
            /// Loads an IFL frame.
            /// </summary>
            /// <param name="IFLLine"></param>
            public IFLFrame(string IFLLine)
            {
                int i = IFLLine.ToUpper().IndexOf(".TGA");
                TextureFilename = IFLLine.Substring(0, i + 4);
                if (i < IFLLine.Length - 4)
                    DurationTicks = Int32.Parse(IFLLine.Substring(i + 5)); // 4 for extension, 1 for space
            }

            /// <summary>
            /// Encodes this IFL frame in the appropriate IFL text format.
            /// </summary>
            /// <returns></returns>
            public override string ToString()
            {
                return TextureFilename + " " + DurationTicks;
            }
        }

        public List<IFLFrame> Frames = new List<IFLFrame>();
        public string Filename = ""; // Needed so frames can find their images

        public IFLFile(Stream s, string filename)
        {
            using (StreamReader reader = new StreamReader(s))
            {
                Filename = filename.ToLower();
                while (!reader.EndOfStream)
                {
                    string line = reader.ReadLine().Trim();
                    if (line.StartsWith(";"))
                        continue;
                    if (line.Length == 0)
                        continue;

                    Frames.Add(new IFLFrame(line));
                }
            }
        }

        public void Write(Stream s)
        {
            using (StreamWriter writer = new StreamWriter(s))
            {
                writer.WriteLine("; Generated by DromeEd");

                foreach (IFLFrame frame in Frames)
                {
                    writer.WriteLine(frame.ToString());
                }
            }
        }
    }
}
